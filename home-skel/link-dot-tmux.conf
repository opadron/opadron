# set Ctrl-a as the default prefix key combination
# and unbind C-b to free it up
set-option -g prefix C-a
unbind C-b

# use send-prefix to pass C-a through to application
unbind C-q
bind C-q send-prefix

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"
bind C-r run 'tmux source-file ~/.tmux.conf' \; display "(Globally) reloaded!"
bind R run 'tmux source-file ~/.tmux.conf' \; display "(Globally) reloaded!"
bind c run 'nvim ~/.tmux.conf && tmux source-file ~/.tmux.conf' \; display "(Globally) reloaded!"

# shorten command delay
set-option -sg escape-time 1
set-option -sg repeat-time 1

set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",*256col*:Tc"

set-option -g history-limit 10000
set-option -g bell-action none
set-option -g status-keys vi
set-option -g visual-bell off
set-option -g alternate-screen on
set-option -g clock-mode-style 12
set-option -g mode-keys vi

# explicitly disable mouse control
set-option -g mouse off

# use vim keybindings in copy mode
setw -g mode-keys vi

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

setw -g aggressive-resize on

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -h
bind \\ split-window -h
bind S split-window -v
bind s split-window -v
bind - split-window -v

# and use C-h and C-l to cycle thru panes
bind -r BSpace select-window -t :-
bind -r Space select-window -t :+
bind -r C-a last-window

bind Tab select-pane -t :.+
bind C-Tab select-pane -t :.-

## resize panes using PREFIX H, J, K, L
#bind H resize-pane -L 5
#bind J resize-pane -D 5
#bind K resize-pane -U 5
#bind L resize-pane -R 5

bind C-j swap-pane -t -1
bind C-k swap-pane -t +1
bind C-h swap-window -t -1
bind C-l swap-window -t +1

bind Escape copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi Escape send-keys -X copy-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection

bind-key n new-window
bind-key p display-popup -E -d "$TMUX_SESSION_ROOT" bash -i

# set pane colors - hilight the active pane
set-option -g pane-border-style fg=colour235 #base02
set-option -g pane-active-border-style fg=colour240 #base01

# set-option -g pane-border-style fg=colour4
# set-option -g pane-active-border-style fg=colour5

# colorize messages in the command line
set-option -g message-style fg=brightred,bg=black #orange on base02

# Status Bar
set-option -g status on                # turn the status bar on
set -g status-interval 100             # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
set-option -g status-position top      # position the status bar at top of screen

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# set color for status bar
set-option -g status-style fg=yellow,bg=colour235,dim #base02

# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-style fg=brightblue,bg=colour236,dim

set-window-option -g window-status-current-style fg=brightred,bg=colour236,bright

set-window-option -g window-status-format ""
set-window-option -g window-status-current-format ""

set -g status-left-length 70
set -g status-left ""

set -g status-right-length 80
set -g status-right "#[fg=yellow] #P"
set -ag status-right "#[fg=terminal]:"
set -ag status-right "#[fg=green]#I"
set -ag status-right "#[fg=terminal]   "
set -ag status-right "#[fg=yellow]$TMUX_SESSION_DISPLAY_NAME"
set -ag status-right "#[fg=terminal]:"
set -ag status-right "#[fg=green]$USER@#h"
set -ag status-right "#[fg=terminal]   "
set -ag status-right "#[fg=yellow]%l:%M %p"
set -ag status-right "#[fg=terminal]   "
set -ag status-right "#[fg=green]%d %b %Y "

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @vim_navigator_prefix_mapping_clear_screen ""

run '~/.tmux/plugins/tpm/tpm'

unbind -n C-h
unbind -n C-l
unbind -n C-k
unbind -n C-j
unbind -n C-Space
unbind -n C-BSpace

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

kml="h" ; cml="select-pane -L"
kmd="j" ; cmd="select-pane -D"
kmu="k" ; cmu="select-pane -U"
kmr="l" ; cmr="select-pane -R"

ksl="H" ; csl="resize-pane -L 10"
ksd="J" ; csd="resize-pane -D 5"
ksu="K" ; csu="resize-pane -U 5"
ksr="L" ; csr="resize-pane -R 10"

send="send-prefix \; send-keys"

bind $kml if-shell "$is_vim" "$send $kml" "$cml"
bind $kmd if-shell "$is_vim" "$send $kmd" "$cmd"
bind $kmu if-shell "$is_vim" "$send $kmu" "$cmu"
bind $kmr if-shell "$is_vim" "$send $kmr" "$cmr"

bind $ksl if-shell "$is_vim" "$send $ksl" "$csl"
bind $ksd if-shell "$is_vim" "$send $ksd" "$csd"
bind $ksu if-shell "$is_vim" "$send $ksu" "$csu"
bind $ksr if-shell "$is_vim" "$send $ksr" "$csr"

root_ops="set-option pane-border-style fg=colour235"  #base02
root_ops="${root_ops} \; set-option pane-active-border-style fg=colour240"  #base01
root_ops="${root_ops} \; set-option pane-border-lines single"
winnav_ops="set-option pane-border-style fg=colour235"
winnav_ops="${winnav_ops} \; set-option pane-active-border-style fg=white"
winnav_ops="${winnav_ops} \; set-option pane-border-lines heavy"

nav_on="switch-client -Twinnav \; ${winnav_ops}"
nav_off="switch-client -Troot \; ${root_ops}"

bind-key C-a "$nav_on"
bind-key -Twinnav Escape "$nav_off"
bind-key -Twinnav Enter "$nav_off"

bind-key -Twinnav $kml if-shell "$is_vim" "$send $kml \; $nav_on" "$cml \; $nav_on"
bind-key -Twinnav $kmd if-shell "$is_vim" "$send $kmd \; $nav_on" "$cmd \; $nav_on"
bind-key -Twinnav $kmu if-shell "$is_vim" "$send $kmu \; $nav_on" "$cmu \; $nav_on"
bind-key -Twinnav $kmr if-shell "$is_vim" "$send $kmr \; $nav_on" "$cmr \; $nav_on"

bind-key -Twinnav $ksl if-shell "$is_vim" "$send $ksl \; $nav_on" "$csl \; $nav_on"
bind-key -Twinnav $ksd if-shell "$is_vim" "$send $ksd \; $nav_on" "$csd \; $nav_on"
bind-key -Twinnav $ksu if-shell "$is_vim" "$send $ksu \; $nav_on" "$csu \; $nav_on"
bind-key -Twinnav $ksr if-shell "$is_vim" "$send $ksr \; $nav_on" "$csr \; $nav_on"

bind-key -Twinnav | "split-window -h \; $nav_on"
bind-key -Twinnav \\ "split-window -h \; $nav_on"
bind-key -Twinnav S "split-window -v \; $nav_on"
bind-key -Twinnav s "split-window -v \; $nav_on"
bind-key -Twinnav - "split-window -v \; $nav_on"

bind-key -Twinnav x "kill-pane \; $nav_on"
bind-key -Twinnav X "kill-pane \; $nav_on"

bind-key -Twinnav Space "next-window \; $nav_on"
bind-key -Twinnav BSpace "previous-window \; $nav_on"

bind-key -Twinnav C-n "next-layout \; $nav_on"
bind-key -Twinnav C-p "previous-layout \; $nav_on"
