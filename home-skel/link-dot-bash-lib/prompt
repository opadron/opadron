#! /usr/bin/env bash

if [ -z "$__prompt_guard" ] ; then __prompt_guard=1
source "$HOME/.bash-lib/init"

mload commonlib
mload colors
mload term_sequences
mload preexec

function check_sum() {
    for com in md5 md5sum shasum ; do
        if check_exit_code _ which $com ; then
            echo "$*" | "$com"
            break
        fi
    done
}

__prompt_shell_level=
__prompt_number_of_jobs=
__prompt_git_branch=
__prompt_git_remote_status=

__prompt_shell_level_flag=
__prompt_right=

function __compute_right_side_prompts() {
    __prompt_right=()
}

function __prompt_update() {
    local x=

    if [ -z "$__prompt_shell_level_flag" ] ; then
        x=
        x="${x}\[$TERM_COLORS_BOLD_BLUE\]("
        x="${x}\[$TERM_COLORS_BLUE\]$SHLVL"
        x="${x}\[$TERM_COLORS_BOLD_BLUE\])"
        x="${x}\[$TERM_COLORS_RESET\]"

        __prompt_shell_level="$x"
        __prompt_shell_level_flag=x
    fi

    __prompt_number_of_jobs=
    local x="$( echo $( jobs | wc -l | sed -e 's/ //g' ) )"
    if [ "$x" '!=' '0' ] ; then
        __prompt_number_of_jobs="($x)"
    fi

    __prompt_git_remote_status="$(
        git status --branch --porcelain --ignore-submodules=dirty 2> /dev/null |
        head -n 1 |
        grep '\[\(ahead\|behind\) [0-9]\+\]' |
        sed -e 's/^.*\(ahead\) \([0-9][0-9]*\).*$/+\2/g' |
        sed -e 's/^.*\(behind\) \([0-9][0-9]*\).*$/-\2/g'
    )"

    __prompt_git_branch="$(
        git branch 2> /dev/null |
        sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
    )"

    if [ -n "$__prompt_git_branch" ] ; then
        x=
        x="${x}git status"
        x="${x} --porcelain"
        x="${x} --ignore-submodules=dirty"

        if $x 2> /dev/null | grep -q -v '^?? .*$'; then
            __prompt_git_branch="${__prompt_git_branch}*"
        fi
    fi

    __prompt_venv="$VIRTUAL_ENV"
    if [ -n "$__prompt_venv" ] ; then
        __prompt_venv="$( basename "$__prompt_venv" )"
    fi


    term_cursor_save
    term_clear_to_end
    term_cursor_down

    date_fmt="+$TERM_COLORS_BLUE%a $TERM_COLORS_RESET%d"
    date_fmt="${date_fmt}$TERM_COLORS_RESET"
    echo -n "$( date "$date_fmt" )"

    echo -n " $TERM_COLORS_CYAN$USER"
    echo -n "$TERM_COLORS_BOLD_BLUE@"
    echo -n "$TERM_COLORS_BLUE$( hostname )"
    echo -n "$TERM_COLORS_RESET"

    if [ "$( pwd )" '!=' "$HOME" ] ; then
        echo -n " $TERM_COLORS_BOLD_GREEN["
        echo -n "$TERM_COLORS_GREEN$( basename "$( pwd )" )"
        echo -n "$TERM_COLORS_BOLD_GREEN]"
        echo -n "$TERM_COLORS_RESET"
    fi

    if [ -n "$__prompt_git_branch" ] ; then
        echo -n " $TERM_COLORS_BOLD_RED("
        echo -n "$TERM_COLORS_RED$__prompt_git_branch"

        if [ -n "$__prompt_git_remote_status" ] ; then
            echo -n ": "
            echo -n "$TERM_COLORS_YELLOW"
            echo -n "${__prompt_git_remote_status::1}"
            echo -n "$TERM_COLORS_BOLD_YELLOW"
            echo -n "${__prompt_git_remote_status:1}"
        fi

        echo -n "$TERM_COLORS_BOLD_RED)"
        echo -n "$TERM_COLORS_RESET"
    fi

    if [ -n "$__prompt_venv" ] ; then
        echo -n " $TERM_COLORS_BOLD_CYAN(\$"
        echo -n "$TERM_COLORS_CYAN"
        echo -n "$__prompt_venv"
        echo -n "$TERM_COLORS_BOLD_CYAN)"
        echo -n "$TERM_COLORS_RESET"
    fi

    echo -n "$( term_cursor_last_line )$( pwd )"
    term_cursor_restore

    # PS1="${PS1}$__prompt_shell_level"
    # PS1="${PS1}$__prompt_number_of_jobs"

    PS1=""
    PS1="\\[$TERM_COLORS_BOLD_RED\\]"
    PS1="${PS1}\\[$( echo -e '\xce' )\\]"
    PS1="${PS1}$( echo -e '\x94' )"
    PS1="${PS1}\\[$TERM_COLORS_RESET\\] "

    if [ "$USER" '=' 'root' ] ; then
        PS1=""
        PS1="${PS1}\\[$TERM_COLORS_RESET\\]"
        PS1="${PS1}\\[$( echo -e '\x1b[1;7;31m' )\\]"
        PS1="${PS1}\\[$( echo -e '\xc2' )\\]"
        PS1="${PS1}$( echo -e '\xae' )"
        PS1="${PS1}\\[$TERM_COLORS_RESET\\] "
        PS1="${PS1}\\[$( echo -e '\x1b[1;5;7;31m' )\\]"
        PS1="${PS1}\\[$TERM_COLORS_BOLD_RED\\]"
    fi
}

export PROMPT_COMMAND=__prompt_update

preexec() { echo -n "$TERM_COLORS_RESET" ; term_clear_to_end; }

fi #!__prompt_guard

